{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\"; // Импортируем библиотеку flatpickr\nimport \"flatpickr/dist/flatpickr.min.css\"; // Импортируем стили flatpickr\nimport iziToast from \"izitoast\"; // Импортируем библиотеку iziToast\nimport \"izitoast/dist/css/iziToast.min.css\"; // Импортируем стили iziToast\n\n// Настройки для flatpickr\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        const userSelectedDate = selectedDates[0];\n        console.log('Выбранная дата:', userSelectedDate); // Отладочный вывод\n\n        if (userSelectedDate < new Date()) {\n            iziToast.error({\n                title: \"Ошибка\",\n                message: \"Пожалуйста, выберите дату в будущем\",\n            });\n            startButton.disabled = true; // Деактивируем кнопку \"Start\"\n        } else {\n            startButton.disabled = false; // Активируем кнопку \"Start\"\n        }\n    },\n};\n\n// Инициализация flatpickr\nflatpickr(\"#datetime-picker\", options);\n\n// Логика таймера\nconst startButton = document.querySelector(\"[data-start]\");\nstartButton.disabled = true; // Деактивируем кнопку \"Start\" изначально\n\nlet timerId = null; // Идентификатор таймера\nlet isTimerActive = false; // Флаг, указывающий, активен ли таймер\n\nstartButton.addEventListener(\"click\", () => {\n    if (isTimerActive) return; // Если таймер уже активен, ничего не делаем\n\n    const countdownDate = new Date(document.getElementById('datetime-picker').value).getTime(); // Получаем timestamp\n    console.log('Время обратного отсчета:', countdownDate); // Отладочный вывод\n\n    isTimerActive = true; // Устанавливаем флаг, что таймер активен\n    startButton.disabled = true; // Деактивируем кнопку \"Start\" после нажатия\n\n    timerId = setInterval(() => {\n        const now = new Date().getTime(); // Получаем текущий timestamp\n        const timeLeft = countdownDate - now;\n\n        if (timeLeft <= 0) {\n            clearInterval(timerId); // Останавливаем таймер\n            // Обновление интерфейса для отображения 00:00:00:00\n            document.querySelector(\"[data-days]\").textContent = \"00\";\n            document.querySelector(\"[data-hours]\").textContent = \"00\";\n            document.querySelector(\"[data-minutes]\").textContent = \"00\";\n            document.querySelector(\"[data-seconds]\").textContent = \"00\";\n\n            isTimerActive = false; // Сбрасываем флаг, таймер завершен\n            startButton.disabled = false; // Активируем кнопку \"Start\" для нового запуска\n            return;\n        }\n\n        const { days, hours, minutes, seconds } = convertMs(timeLeft);\n        // Обновление интерфейса\n        document.querySelector(\"[data-days]\").textContent = addLeadingZero(days);\n        document.querySelector(\"[data-hours]\").textContent = addLeadingZero(hours);\n        document.querySelector(\"[data-minutes]\").textContent = addLeadingZero(minutes);\n        document.querySelector(\"[data-seconds]\").textContent = addLeadingZero(seconds);\n    }, 1000);\n});\n\n// Функция для преобразования миллисекунд\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\n// Функция для добавления ведущих нулей\nfunction addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n}\n"],"names":["options","selectedDates","userSelectedDate","iziToast","startButton","flatpickr","timerId","isTimerActive","countdownDate","now","timeLeft","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value"],"mappings":"+IAMA,MAAMA,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,MAAMC,EAAmBD,EAAc,CAAC,EACxC,QAAQ,IAAI,kBAAmBC,CAAgB,EAE3CA,EAAmB,IAAI,MACvBC,EAAS,MAAM,CACX,MAAO,SACP,QAAS,qCACzB,CAAa,EACDC,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE9B,CACL,EAGAC,EAAU,mBAAoBL,CAAO,EAGrC,MAAMI,EAAc,SAAS,cAAc,cAAc,EACzDA,EAAY,SAAW,GAEvB,IAAIE,EAAU,KACVC,EAAgB,GAEpBH,EAAY,iBAAiB,QAAS,IAAM,CACxC,GAAIG,EAAe,OAEnB,MAAMC,EAAgB,IAAI,KAAK,SAAS,eAAe,iBAAiB,EAAE,KAAK,EAAE,UACjF,QAAQ,IAAI,2BAA4BA,CAAa,EAErDD,EAAgB,GAChBH,EAAY,SAAW,GAEvBE,EAAU,YAAY,IAAM,CACxB,MAAMG,EAAM,IAAI,KAAM,EAAC,QAAO,EACxBC,EAAWF,EAAgBC,EAEjC,GAAIC,GAAY,EAAG,CACf,cAAcJ,CAAO,EAErB,SAAS,cAAc,aAAa,EAAE,YAAc,KACpD,SAAS,cAAc,cAAc,EAAE,YAAc,KACrD,SAAS,cAAc,gBAAgB,EAAE,YAAc,KACvD,SAAS,cAAc,gBAAgB,EAAE,YAAc,KAEvDC,EAAgB,GAChBH,EAAY,SAAW,GACvB,MACH,CAED,KAAM,CAAE,KAAAO,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAQ,EAE5D,SAAS,cAAc,aAAa,EAAE,YAAcM,EAAeL,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcK,EAAeJ,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcI,EAAeH,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcG,EAAeF,CAAO,CAChF,EAAE,GAAI,CACX,CAAC,EAGD,SAASC,EAAUE,EAAI,CAMnB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAC1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EACpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EACjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAGA,SAASE,EAAeE,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACxC"}